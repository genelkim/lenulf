
(in-package :lenulf)

; Declarations
;    #include decls
; 
; Rules
;    #include dru
;                          ; I note the following omissions:
;                          ; "amid(st)", "past (the house)", "except (for)",
;                          ; "underneath", "within". -LKS
;                          ; We might add "than" as a preposition
; Entries

(defparameter *p.le*
'(
(about about ((V -) (N -) (PFORM ABOUT)) ABOUT NIL)
(about about ((V -) (N -) (PFORM NORM)) ABOUT NIL)
(about about ((V -) (N -) (PFORM ABOUT_TO) (LOC -)) ABOUT NIL)
(about about ((V -) (N -) (PFORM ABOUT_WITH) (LOC -)) ABOUT NIL)
(about about ((V -) (N -) (PFORM AT_ABOUT) (LOC -)) ABOUT NIL)
(about about ((V -) (N -) (PFORM WITH_ABOUT) (LOC -)) ABOUT NIL)
(above above ((V -) (N -) (PFORM ABOVE)) ABOVE NIL)
(above above ((V -) (N -) (PFORM NORM)) ABOVE NIL)
(across across ((V -) (N -) (PFORM ACROSS)) ACROSS NIL)
(across across ((V -) (N -) (PFORM NORM)) ACROSS NIL)
(after after ((V -) (N -) (PFORM AFTER)) AFTER NIL)
(after after ((V -) (N -) (PFORM NORM)) AFTER NIL)
(against against ((V -) (N -) (PFORM AGAINST)) AGAINST NIL)
(against against ((V -) (N -) (PFORM NORM)) AGAINST NIL)
(against against ((V -) (N -) (PFORM TO_AGAINST) (LOC -)) AGAINST NIL)
(against against ((V -) (N -) (PFORM WITH_AGAINST) (LOC -)) AGAINST NIL)
(along along ((V -) (N -) (PFORM ALONG)) ALONG NIL)
(along along ((V -) (N -) (PFORM NORM)) ALONG NIL)
   (alongside alongside ((V -) (N -) (PFORM ALONGSIDE)) ALONGSIDE NIL); LKS
   (amidst amidst ((V -) (N -) (PFORM AMIDST)) AMIDST NIL); added by LKS
(among among ((V -) (N -) (PFORM AMONG)) AMONG NIL)
(among among ((V -) (N -) (PFORM NORM)) AMONG NIL)
(amongst amongst ((V -) (N -) (PFORM AMONGST)) AMONGST NIL)
(amongst amongst ((V -) (N -) (PFORM NORM)) AMONGST NIL)
(around around ((V -) (N -) (PFORM AROUND)) AROUND NIL)
(around around ((V -) (N -) (PFORM NORM)) AROUND NIL)
(as as ((V -) (N -) (PFORM AS) (LOC -)) AS NIL)
(as as ((V -) (N -) (PFORM AS_TO) (LOC -)) AS NIL)
(as as ((V -) (N -) (PFORM OF_AS) (LOC -)) AS NIL)
(as as ((V -) (N -) (PFORM ON_AS) (LOC -)) AS NIL)
(as as ((V -) (N -) (PFORM TO_AS) (LOC -)) AS NIL)
(at at ((V -) (N -) (PFORM AT)) AT NIL)
(at at ((V -) (N -) (PFORM NORM)) AT NIL)
(at at ((V -) (N -) (PFORM AT_ABOUT) (LOC -)) AT NIL)
(at at ((V -) (N -) (PFORM AT_FOR) (LOC -)) AT NIL)
(at at ((V -) (N -) (PFORM IN_AT) (LOC -)) AT NIL)
(at at ((V -) (N -) (PFORM WITH_AT) (LOC -)) AT NIL)
(before before ((V -) (N -) (PFORM BEFORE)) BEFORE NIL)
(before before ((V -) (N -) (PFORM NORM)) BEFORE NIL)
(behind behind ((V -) (N -) (PFORM BEHIND)) BEHIND NIL)
(behind behind ((V -) (N -) (PFORM NORM)) BEHIND NIL)
(below below ((V -) (N -) (PFORM BELOW)) BELOW NIL)
(below below ((V -) (N -) (PFORM NORM)) BELOW NIL)
(beside beside ((V -) (N -) (PFORM BESIDE)) BESIDE NIL)
(beside beside ((V -) (N -) (PFORM NORM)) BESIDE NIL)
(between between ((V -) (N -) (PFORM BETWEEN)) BETWEEN NIL)
(between between ((V -) (N -) (PFORM NORM)) BETWEEN NIL)
   (betwixt betwixt ((V -) (N -) (PFORM BETWIXT)) BETWIXT NIL); added by LKS
   (beyond beyond ((V -) (N -) (PFORM BEYOND)) BEYOND NIL); added by LKS
(by by ((V -) (N -) (PFORM BY)) BY NIL)
(by by ((V -) (N -) (PFORM NORM)) BY NIL)
(by by ((V -) (N -) (PFORM BY_FOR) (LOC -)) BY NIL)
   (despite despite ((V -) (N -) (PFORM DESPITE) (LOC -)) DESPITE NIL); LKS
(down down ((V -) (N -) (PFORM DOWN)) DOWN NIL)
(down down ((V -) (N -) (PFORM NORM)) DOWN NIL)
(down down ((V -) (N -) (PFORM DOWN_TO) (LOC -)) DOWN NIL)
(during during ((V -) (N -) (PFORM DURING)) DURING NIL)
(during during ((V -) (N -) (PFORM NORM)) DURING NIL)
   (except except ((V -) (N -) (PFORM EXCEPT)) EXCEPT NIL); can be"prep-like" -LKS
   (except_for except_for ((V -) (N -) (PFORM EXCEPT_FOR)) EXCEPT_FOR NIL); LKS
(for for ((V -) (N -) (PFORM FOR) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM NORM) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM AT_FOR) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM BY_FOR) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM FOR_TO) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM FOR_WITH) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM FROM_FOR) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM OF_FOR) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM ON_FOR) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM TO_FOR) (LOC -)) FOR NIL)
(for for ((V -) (N -) (PFORM WITH_FOR) (LOC -)) FOR NIL)
(from from ((V -) (N -) (PFORM FROM) (LOC -)) FROM NIL)
(from from ((V -) (N -) (PFORM NORM) (LOC -)) FROM NIL)
(from from ((V -) (N -) (PFORM FROM_FOR) (LOC -)) FROM NIL)
(from from ((V -) (N -) (PFORM FROM_INTO) (LOC -)) FROM NIL)
(from from ((V -) (N -) (PFORM FROM_TO) (LOC -)) FROM NIL)
(from from ((V -) (N -) (PFORM TO_FROM) (LOC -)) FROM NIL)
(in in ((V -) (N -) (PFORM IN) (LOC +)) IN NIL)
(in in ((V -) (N -) (PFORM NORM) (LOC +)) IN NIL)
(in in ((V -) (N -) (PFORM IN_AT) (LOC -)) IN NIL)
(in in ((V -) (N -) (PFORM IN_WITH) (LOC -)) IN NIL)
(in_favour_of in_favour_of ((V -) (N -) (PFORM IN_FAVOUR_OF)) IN_FAVOUR_OF NIL)
(in_front_of in_front_of ((V -) (N -) (PFORM IN_FRONT_OF)) IN_FRONT_OF NIL)
(inside inside ((V -) (N -) (PFORM NORM)) INSIDE NIL)
(into into ((V -) (N -) (PFORM NORM)) INTO NIL)
(into into ((V -) (N -) (PFORM FROM_INTO) (LOC -)) INTO NIL)
(into into ((V -) (N -) (PFORM INTO_WITH) (LOC -)) INTO NIL)
(like like ((V -) (N -) (PFORM LIKE) (LOC -)) LIKE NIL)
(like like ((V -) (N -) (PFORM NORM) (LOC -)) LIKE NIL)
(near near ((V -) (N -) (PFORM NORM)) NEAR NIL)
  (next_to ((V -) (N -) (PFORM NEXT_TO)) NEXT_TO NIL); added by LKS
  (notwithstanding ((V -) (N -) (PFORM NOTWITHSTANDING) (LOC -)) 
                                             NOTWITHSTANDING NIL); added by LKS
(of of ((V -) (N -) (PFORM OF) (LOC -)) OF NIL)
(of of ((V -) (N -) (PFORM OF_AS) (LOC -)) OF NIL)
(of of ((V -) (N -) (PFORM OF_FOR) (LOC -)) OF NIL)
(off off ((V -) (N -) (PFORM OFF)) OFF NIL)
(off off ((V -) (N -) (PFORM NORM)) OFF NIL)
(on on ((V -) (N -) (PFORM ON) (LOC +)) ON NIL)
(on on ((V -) (N -) (PFORM NORM) (LOC +)) ON NIL)
(on on ((V -) (N -) (PFORM ON_AS) (LOC -)) ON NIL)
(on on ((V -) (N -) (PFORM ON_FOR) (LOC -)) ON NIL)
(on on ((V -) (N -) (PFORM ON_TO) (LOC -)) ON NIL)
(on on ((V -) (N -) (PFORM ON_WITH) (LOC -)) ON NIL)
(on on ((V -) (N -) (PFORM WITH_ON) (LOC -)) ON NIL)
(on_board on_board ((V -) (N -) (PFORM ON_BOARD)) ON_BOARD NIL)
(onto onto ((V -) (N -) (PFORM ONTO)) ONTO NIL)
(onto onto ((V -) (N -) (PFORM NORM)) ONTO NIL)
(out out ((V -) (N -) (PFORM OUT)) OUT NIL)
(out out ((V -) (N -) (PFORM NORM)) OUT NIL)
(outside outside ((V -) (N -) (PFORM NORM)) OUTSIDE NIL)
   (outside_of outside_of ((V -) (N -) (PFORM OUTSIDE_OF)) OUTSIDE_OF NIL); LKS
(out_of out_of ((V -) (N -) (PFORM OUT_OF) (LOC -)) OUT_OF NIL)
(over over ((V -) (N -) (PFORM OVER) (LOC -)) OVER NIL)
(over over ((V -) (N -) (PFORM NORM) (LOC -)) OVER NIL)
(over over ((V -) (N -) (PFORM OVER_WITH) (LOC -)) OVER NIL)
(over over ((V -) (N -) (PFORM WITH_OVER) (LOC -)) OVER NIL)
  (past past ((V -) (N -) (PFORM PAST) (LOC -)) PAST NIL); added by LKS
(round round ((V -) (N -) (PFORM ROUND)) ROUND NIL)
(round round ((V -) (N -) (PFORM NORM)) ROUND NIL)
(than than ((V -) (N -) (PFORM THAN) (LOC -)) THAN NIL); questionable - LKS
(through through ((V -) (N -) (PFORM THROUGH)) THROUGH NIL)
(through through ((V -) (N -) (PFORM NORM)) THROUGH NIL)
(throughout throughout ((V -) (N -) (PFORM THROUGHOUT)) THROUGHOUT NIL)
(throughout throughout ((V -) (N -) (PFORM NORM)) THROUGHOUT NIL)
(till till ((V -) (N -) (PFORM TILL)) TILL NIL)
(till till ((V -) (N -) (PFORM NORM)) TILL NIL)
(to to ((V -) (N -) (PFORM TO)) TO NIL)
(to to ((V -) (N -) (PFORM ABOUT_TO) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM AS_TO) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM DOWN_TO) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM FOR_TO) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM FROM_TO) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM ON_TO) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM TO_AGAINST) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM TO_AS) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM TO_FOR) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM TO_FROM) (LOC -)) TO NIL)
(to to ((V -) (N -) (PFORM UP_TO) (LOC -)) TO NIL)
(together together ((V -) (N -) (PFORM TOGETHER)) TOGETHER NIL)
(together together ((V -) (N -) (PFORM NORM)) TOGETHER NIL)
   (to_the_left_of to_the_left_of ((V -) (N -) (PFORM TO_THE_LEFT_OF)) 
                                                      TO_THE_LEFT_OF NIL); LKS
   (to_the_right_of to_the_right_of ((V -) (N -) (PFORM TO_THE_RIGHT_OF)) 
                                                      TO_THE_RIGHT_OF NIL); LKS
(toward toward ((V -) (N -) (PFORM TOWARD)) TOWARD NIL)
(toward toward ((V -) (N -) (PFORM NORM)) TOWARD NIL)
(towards towards ((V -) (N -) (PFORM TOWARDS)) TOWARDS NIL)
(towards towards ((V -) (N -) (PFORM NORM)) TOWARDS NIL)
(under under ((V -) (N -) (PFORM UNDER)) UNDER NIL)
(under under ((V -) (N -) (PFORM NORM)) UNDER NIL)
   (underneath underneath ((V -) (N -) (PFORM UNDERNEATH)) UNDERNEATH NIL); LKS
(until until ((V -) (N -) (PFORM UNTIL)) UNTIL NIL)
(until until ((V -) (N -) (PFORM NORM)) UNTIL NIL)
(up up ((V -) (N -) (PFORM UP)) UP NIL)
(up up ((V -) (N -) (PFORM NORM)) UP NIL)
(up up ((V -) (N -) (PFORM UP_TO) (LOC -)) UP NIL)
(upon upon ((V -) (N -) (PFORM UPON)) UPON NIL)
(upon upon ((V -) (N -) (PFORM NORM)) UPON NIL)
(with with ((V -) (N -) (PFORM WITH) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM NORM) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM ABOUT_WITH) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM FOR_WITH) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM INTO_WITH) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM IN_WITH) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM ON_WITH) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM OVER_WITH) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM WITH_ABOUT) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM WITH_AGAINST) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM WITH_AT) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM WITH_FOR) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM WITH_ON) (LOC -)) WITH NIL)
(with with ((V -) (N -) (PFORM WITH_OVER) (LOC -)) WITH NIL)
   (within within ((V -) (N -) (PFORM WITHIN) (LOC +)) WITHIN NIL); LKS
(without without ((V -) (N -) (PFORM WITHOUT)) WITHOUT NIL)
(without without ((V -) (N -) (PFORM NORM)) WITHOUT NIL)
))

;; preps with sentential complements

(defparameter *ps.le*
'(
(after after ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) AFTER NIL)
(although although ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) ALTHOUGH NIL)
(because because ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) BECAUSE NIL)
(before before ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) BEFORE NIL)
(if if ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) IF NIL)
(lest lest ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) LEST NIL)
(like like ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) LIKE NIL)
(once once ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) ONCE NIL)
(otherwise otherwise ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) OTHERWISE NIL)
(since since ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) SINCE NIL)
(so so ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) SO NIL)
(though though ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) THOUGH NIL)
(till till ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) TILL NIL)
(unless unless ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) UNLESSS NIL)
(until until ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) UNTIL NIL)
(while while ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) WHILE NIL)
(whilst whilst ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) WHILST NIL)
(whereas whereas ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) WHEREAS NIL)
(whereupon whereupon ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) WHEREUPON NIL)
(when when ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) WHEN NIL)
(whenever whenever ((V -) (N -) (PFORM NORM) (SUBCAT SFIN) (LOC -)) WHENEVER NIL)
))

;; preps with PP complements

(defparameter *pre-prep.le*
'(
(out out ((V -) (N -) (PFORM NORM) (SUBCAT PP)) OUT NIL)
(in in ((V -) (N -) (PFORM NORM) (SUBCAT PP)) IN NIL)
(up up ((V -) (N -) (PFORM NORM) (SUBCAT PP)) UP NIL)
(down down ((V -) (N -) (PFORM NORM) (SUBCAT PP)) DOWN NIL)
(because because ((V -) (N -) (PFORM NORM) (SUBCAT PP)) BECAUSE NIL)
(on on  ((V -) (N -) (PFORM NORM) (SUBCAT PP)) OFF NIL)
(off off ((V -) (N -) (PFORM NORM) (SUBCAT PP)) OFF NIL)
(from from ((V -) (N -) (PFORM NORM) (SUBCAT PP)) FROM NIL)
(to to ((V -) (N -) (PFORM NORM) (SUBCAT PP)) TO NIL)
))
